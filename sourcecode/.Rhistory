codeCountry <- DataExtractorWB$rawData[[2]]$id
countryCode <- "ARG"
query <- paste("http://api.worldbank.org/countries/", countryCode, "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json",,,sep = "")
query <- paste("http://api.worldbank.org/countries/", countryCode, "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
rawDataCountry[[1]]$total
rawDataCountry[[2]]$date
rawDataCountry[[2]]$value
rawDataCountry[[2]]$decimal
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryName <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryName <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
library(jsonlite)
DataExtractorWB <- new.env()
DataExtractorWB$loadingRawData <- function()
{
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryName <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(countryCode in countryCodes)
{
query <- paste("http://api.worldbank.org/countries/", countryCode, "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
dataCountry <- cbind(countryName, rawDataCountry[[2]]$date, rawDataCountry[[2]]$value)
dataset <- rbind(dataset, dataCountry)
}
DataExtractorNISAT$rawDataCountry <- fromJSON("http://api.worldbank.org/countries/ARG/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json")
}
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryName <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
dataCountry <- cbind(countryNames[inxCountry], rawDataCountry[[2]]$date, rawDataCountry[[2]]$value)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
countryNames <- DataExtractorWB$rawData[[2]]$name
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
dataCountry <- cbind(countryNames[inxCountry], rawDataCountry[[2]]$date, rawDataCountry[[2]]$value)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
nbCountry
rawDataCountry <-fromJSON(query)
years <- rawDataCountry[[2]]$date
rawDataCountry[[1]]$total
rawDataCountry <-fromJSON(query)
rawDataCountry$total
rawDataCountry$total[1]
inxCountry <- 3
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
rawDataCountry$total[1]
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
rawDataCountry <-fromJSON(query)
if(rawDataCountry$total[1] != 0)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
gdpPerYear <- fromJSON(query)
countryCodes
inxCountry <- 10
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
rawDataCountry$total[1]
rawDataCountry$total
length(rawDataCountry)
inxCountry <- 1
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
length(rawDataCountry)
length(gdpPerYear)
inxCountry <- 10
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
length(gdpPerYear)
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
View(dataset)
DataExtractorWB$loadingRawData()
library(jsonlite)
DataExtractorWB <- new.env()
DataExtractorWB$extract <- function()
{
DataExtractorWB$loadingRawData()
}
DataExtractorWB$loadingRawData <- function()
{
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:10)#nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$V1 <- tolower(dataset$V1)
return(dataset)
}
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:10)#nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$V1 <- tolower(dataset$V1)
return(dataset)
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 10:10)#nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
names(dataset)
names(dataset)[1]
names(dataset)[1] <- "country"
dataset$V1 <- tolower(dataset$country)
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 10:10)#nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
View(dataset)
library(jsonlite)
DataExtractorWB <- new.env()
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- rawDataCountry[[2]]$date
gdps <- rawDataCountry[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
library(jsonlite)
DataExtractorWB <- new.env()
DataExtractorWB$rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
nbCountry <- DataExtractorWB$rawData[[1]]$total
countryCodes <- DataExtractorWB$rawData[[2]]$id
countryNames <- DataExtractorWB$rawData[[2]]$name
dataset <- data.frame()
for(inxCountry in 1:nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
View(dataset)
DataScraperWB$loadingCountries <- function()
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
library(jsonlite)
DataScraperWB <- new.env()
DataScraperWB$loadingCountries <- function()
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
DataScraperWB$loadingCountries()
DataScraperWB$nbCountry
DataScraperWB$countryCodes
DataScraperWB$countryNames
exists("nbCountry", DataScraperWB)
exists("nbCountsry", DataScraperWB)
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("nbCountry", DataScraperWB) | !exists("nbCountry", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
!exists("nbCountry", DataScraperWB)
!exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB)
!exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countrysNames", DataScraperWB)
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
else
{
print("Do nothing")
}
library(jsonlite)
DataScraperWB <- new.env()
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
else
{
print("Do nothing")
}
DataScraperWB$loadingCountries()
dataset <- data.frame()
for(inxCountry in 1:DataScraperWB$nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", DataScraperWB$countryCodes[inxCountry], "/indicators/6.0.GDP_current?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(DataScraperWB$countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(DataScraperWB$countryNames[inxCountry])
}
library(jsonlite)
DataScraperWB <- new.env()
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
DataScraperWB$loadingIndicator <- function(indicator)
{
DataScraperWB$loadingCountries()
dataset <- data.frame()
for(inxCountry in 1:DataScraperWB$nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", DataScraperWB$countryCodes[inxCountry], "/indicators/6.0.", indicator, "?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(DataScraperWB$countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(DataScraperWB$countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
return(dataset)
}
DataScraperWB$loadingIndicator("GDP_current")
library(jsonlite)
DataScraperWB <- new.env()
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
DataScraperWB$loadingIndicator <- function(indicator)
{
DataScraperWB$loadingCountries()
dataset <- data.frame()
for(inxCountry in 1:DataScraperWB$nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", DataScraperWB$countryCodes[inxCountry], "/indicators/", indicator, "?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(DataScraperWB$countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(DataScraperWB$countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
return(dataset)
}
DataScraperWB$loadingIndicator("6.0.GDP_current")
library(jsonlite)
DataScraperWB <- new.env()
DataScraperWB$loadingCountries <- function()
{
if( !exists("nbCountry", DataScraperWB) | !exists("countryCodes", DataScraperWB) | !exists("countryNames", DataScraperWB) )
{
rawData <- fromJSON("http://api.worldbank.org/country?per_page=10000&format=json")
DataScraperWB$nbCountry <- rawData[[1]]$total
DataScraperWB$countryCodes <- rawData[[2]]$id
DataScraperWB$countryNames <- rawData[[2]]$name
}
DataScraperWB$loadingIndicator <- function(indicator)
{
DataScraperWB$loadingCountries()
dataset <- data.frame()
for(inxCountry in 1:DataScraperWB$nbCountry)
{
query <- paste("http://api.worldbank.org/countries/", DataScraperWB$countryCodes[inxCountry], "/indicators/", indicator, "?per_page=1000&date=1960:2014&format=json", sep = "")
gdpPerYear <- fromJSON(query)
if(length(gdpPerYear) == 2)
{
years <- gdpPerYear[[2]]$date
gdps <- gdpPerYear[[2]]$value
dataCountry <- cbind(DataScraperWB$countryNames[inxCountry], years, gdps)
dataset <- rbind(dataset, dataCountry)
print(DataScraperWB$countryNames[inxCountry])
}
# Format
names(dataset)[1] <- "country"
dataset$country <- tolower(dataset$country)
return(dataset)
}
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
View(datasetGDP)
# Setup path.
fileUrl <- "https://raw.githubusercontent.com/dataarts/armsglobe/master/categories/All.json"
filePath <- "../data/nisatdataset.json"
# Download file.
download.file(fileUrl, destfile = filePath, mode = "wb")
# WARNING: Manually download full dataset
# http://info.worldbank.org/governance/wgi/index.aspx#home
source("DataScraperWB.R")
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
write.csv(datasetGDP, "../data/datasetWB_GDB.csv")
list.files("../data")
View(datasetGDP)
source("DataScraperWB.R")
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
write.csv(datasetGDP, "../data/datasetWB_GDB.csv")
source("DataScraperWB.R")
{
print(paste(DataScraperWB$countryNames[inxCountry], "FAIL"))
}
source("DataScraperWB.R")
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
write.csv(datasetGDP, "../data/datasetWB_GDB.csv")
source("DataScraperWB.R")
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
write.csv(datasetGDP, "../data/datasetWB_GDB.csv")
source("DataScraperWB.R")
datasetGDP <- DataScraperWB$loadingIndicator("6.0.GDP_current")
write.csv(datasetGDP, "../data/datasetWB_GDB.csv")
View(datasetGDP)
DataScraping$scrape()
require(knitr)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
source("DataScraping.R")
# Scrapping the raw datasets.
DataScraping$scrape()
# Extract & Format raw datasets.
nisatdataset <- DataExtractorNISAT$extract("../data//nisatdataset.json")
wgidataset <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
dataset <- merge(nisatdataset, wgidataset, by = c("country", "year"))
# Generate the result dataset.
write.csv(dataset, "../data//dataset.csv")
# Generate the codebook.
# knit("codebook.Rmd", output = "../codebook.html")
# Generate the analysis.
# knit("analysis.Rmd", output = "../analysis.html")
