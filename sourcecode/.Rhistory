names(data) <- c("country", "year", dataName)
}
return(data)
}
DataExtractorWGI$extract("../data//wgidataset.xlsx")
asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "asd")
debug(asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "asd"))
DataExtractorWGI$splitByYear <- function(dataToSplit, )
{
browser()
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
data <- rbind(data, cbind(country, year, dataToSplit[,inxCol]))
names(data) <- c("country", "year", "dataName")
}
return(data)
}
DataExtractorWGI$extract("../data//wgidataset.xlsx")
options(java.parameters = "-Xmx8000m") # Java Stack full bugfix
library(xlsx)
DataExtractorWGI <- new.env()
DataExtractorWGI$extract <- function(url)
{
DataExtractorWGI$init()
DataExtractorWGI$politicalStability <- DataExtractorWGI$extractPage(url, 2, "psnv")
DataExtractorWGI$governmentEffectiveness <- DataExtractorWGI$extractPage(url, 3, "ge")
DataExtractorWGI$ruleOfLaw <- DataExtractorWGI$extractPage(url, 5, "rol")
}
DataExtractorWGI$init <- function()
{
DataExtractorWGI$colIndex <- c( 1, seq(from = 3, to = 999, by = 6))
}
DataExtractorWGI$extractPage <- function(url, sheetIndex, prefix)
{
year <- read.xlsx(url, sheetIndex = sheetIndex, head = FALSE, rowIndex = 14, colIndex = DataExtractorWGI$colIndex)
data <- read.xlsx(url, sheetIndex = sheetIndex, startRow = 15, colIndex = DataExtractorWGI$colIndex)
names(data) <- year
names(data)[1] <- "country"
return(data)
}
DataExtractorWGI$splitByYear <- function(dataToSplit, )
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
data <- rbind(data, cbind(country, year, dataToSplit[,inxCol]))
names(data) <- c("country", "year", "dataName")
}
return(data)
}
options(java.parameters = "-Xmx8000m") # Java Stack full bugfix
library(xlsx)
DataExtractorWGI <- new.env()
DataExtractorWGI$extract <- function(url)
{
DataExtractorWGI$init()
DataExtractorWGI$politicalStability <- DataExtractorWGI$extractPage(url, 2, "psnv")
DataExtractorWGI$governmentEffectiveness <- DataExtractorWGI$extractPage(url, 3, "ge")
DataExtractorWGI$ruleOfLaw <- DataExtractorWGI$extractPage(url, 5, "rol")
}
DataExtractorWGI$init <- function()
{
DataExtractorWGI$colIndex <- c( 1, seq(from = 3, to = 999, by = 6))
}
DataExtractorWGI$extractPage <- function(url, sheetIndex, prefix)
{
year <- read.xlsx(url, sheetIndex = sheetIndex, head = FALSE, rowIndex = 14, colIndex = DataExtractorWGI$colIndex)
data <- read.xlsx(url, sheetIndex = sheetIndex, startRow = 15, colIndex = DataExtractorWGI$colIndex)
names(data) <- year
names(data)[1] <- "country"
return(data)
}
DataExtractorWGI$splitByYear <- function(dataToSplit )
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
data <- rbind(data, cbind(country, year, dataToSplit[,inxCol]))
names(data) <- c("country", "year", "dataName")
}
return(data)
}
DataExtractorWGI$extract("../data//wgidataset.xlsx")
asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability)
DataExtractorWGI$splitByYear <- function(dataToSplit )
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
print(class(dataToSplit))
data <- rbind(data, cbind(country, year, dataToSplit[,inxCol]))
names(data) <- c("country", "year", "dataName")
}
return(data)
}
asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability)
DataExtractorWGI$splitByYear <- function(dataToSplit )
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
print(inxCol)
data <- rbind(data, cbind(country, year, dataToSplit[,inxCol]))
names(data) <- c("country", "year", "dataName")
}
return(data)
}
asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability)
cbind(country, year, dataToSplit[,inxCol])
DataExtractorWGI$splitByYear <- function(dataToSplit )
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
tmp <- cbind(country, year, dataToSplit[,inxCol])
names(tmp) <- c("country", "year", "dataName")
data <- rbind(data, tmp)
}
return(data)
}
asd <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability)
View(asd)
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
DataExtractorWGI$extract("../data//wgidataset.xlsx")
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
governmentEffectiveness <- DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness")
ruleOfLaw <- DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw")
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
governmentEffectiveness <- DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness")
ruleOfLaw <- DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw")
DataExtractorWGI$splitByYear <- function(dataToSplit, dataName)
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
tmp <- cbind(country, year, dataToSplit[,inxCol])
names(tmp) <- c("country", "year", dataName)
data <- rbind(data, tmp)
}
return(data)
}
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
governmentEffectiveness <- DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness")
ruleOfLaw <- DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw")
View(ruleOfLaw)
tmp <- merge(DataExtractorWGI$politicalStability[,c(1, inxCol)], DataExtractorWGI$governmentEffectiveness[,c(1, inxCol)], by = c("country", "year"))
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = c("country", "year"))
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness)
View(politicalStability)
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness,by=c("country", "year"))
DataExtractorWGI$extract("../data//wgidataset.xlsx")
politicalStability <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability") )
governmentEffectiveness <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness") )
ruleOfLaw <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw") )
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness)
DataExtractorWGI$extract("../data//wgidataset.xlsx")
politicalStability <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability") )
governmentEffectiveness <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness") )
ruleOfLaw <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw") )
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = c("country", "year"))
tmp <- merge(tmp, DataExtractorWGI$ruleOfLaw, by = c("country", "year"))
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = "country"))
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = "country")
View(tmp)
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = "year")
View(governmentEffectiveness)
View(politicalStability)
View(governmentEffectiveness)
View(politicalStability)
View(governmentEffectiveness)
View(politicalStability)
View(governmentEffectiveness)
View(politicalStability)
View(governmentEffectiveness)
View(politicalStability)
tmp <- merge(DataExtractorWGI$politicalStability, DataExtractorWGI$governmentEffectiveness, by = "year")
DataExtractorWGI$splitByYear <- function(dataToSplit, dataName)
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
tmp <- cbind(country, year, dataToSplit[,inxCol])
names(tmp) <- c("country", "asdasd", dataName)
data <- rbind(data, tmp)
}
return(data)
}
politicalStability <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability") )
governmentEffectiveness <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness") )
ruleOfLaw <- na.omit( DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw") )
tmp <- merge(politicalStability, governmentEffectiveness, by = c("country", "year"))
tmp <- merge(tmp, ruleOfLaw, by = c("country", "year"))
options(java.parameters = "-Xmx8000m") # Java Stack full bugfix
library(xlsx)
DataExtractorWGI <- new.env()
DataExtractorWGI$extract <- function(url)
{
DataExtractorWGI$init()
DataExtractorWGI$politicalStability <- DataExtractorWGI$extractPage(url, 2, "psnv")
DataExtractorWGI$governmentEffectiveness <- DataExtractorWGI$extractPage(url, 3, "ge")
DataExtractorWGI$ruleOfLaw <- DataExtractorWGI$extractPage(url, 5, "rol")
}
DataExtractorWGI$init <- function()
{
DataExtractorWGI$colIndex <- c( 1, seq(from = 3, to = 999, by = 6))
}
DataExtractorWGI$extractPage <- function(url, sheetIndex, prefix)
{
year <- read.xlsx(url, sheetIndex = sheetIndex, head = FALSE, rowIndex = 14, colIndex = DataExtractorWGI$colIndex)
data <- read.xlsx(url, sheetIndex = sheetIndex, startRow = 15, colIndex = DataExtractorWGI$colIndex)
names(data) <- year
names(data)[1] <- "country"
return(data)
}
DataExtractorWGI$splitByYear <- function(dataToSplit, dataName)
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
tmp <- cbind(country, year, dataToSplit[,inxCol])
names(tmp) <- c("country", "year", dataName)
data <- rbind(data, tmp)
}
return(data)
}
DataExtractorWGI$extract("../data//wgidataset.xlsx")
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
governmentEffectiveness <- DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness")
ruleOfLaw <- DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw")
tmp <- merge(politicalStability, governmentEffectiveness, by = c("country", "year"))
tmp <- merge(tmp, ruleOfLaw, by = c("country", "year"))
View(tmp)
options(java.parameters = "-Xmx8000m") # Java Stack full bugfix
library(xlsx)
DataExtractorWGI <- new.env()
DataExtractorWGI$extract <- function(url)
{
DataExtractorWGI$init()
DataExtractorWGI$politicalStability <- DataExtractorWGI$extractPage(url, 2, "psnv")
DataExtractorWGI$governmentEffectiveness <- DataExtractorWGI$extractPage(url, 3, "ge")
DataExtractorWGI$ruleOfLaw <- DataExtractorWGI$extractPage(url, 5, "rol")
return(DataExtractorWGI$mergeByCountryAndYear())
}
DataExtractorWGI$init <- function()
{
DataExtractorWGI$colIndex <- c( 1, seq(from = 3, to = 999, by = 6))
}
DataExtractorWGI$extractPage <- function(url, sheetIndex, prefix)
{
year <- read.xlsx(url, sheetIndex = sheetIndex, head = FALSE, rowIndex = 14, colIndex = DataExtractorWGI$colIndex)
data <- read.xlsx(url, sheetIndex = sheetIndex, startRow = 15, colIndex = DataExtractorWGI$colIndex)
names(data) <- year
names(data)[1] <- "country"
return(data)
}
DataExtractorWGI$splitByYear <- function(dataToSplit, dataName)
{
data <- data.frame()
for( inxCol in 2:length(dataToSplit) )
{
year <- names(dataToSplit)[inxCol]
country <- as.character(dataToSplit[,1])
tmp <- cbind(country, year, dataToSplit[,inxCol])
names(tmp) <- c("country", "year", dataName)
data <- rbind(data, tmp)
}
return(data)
}
DataExtractorWGI$mergeByCountryAndYear <- function()
{
politicalStability <- DataExtractorWGI$splitByYear(DataExtractorWGI$politicalStability, "politicalStability")
governmentEffectiveness <- DataExtractorWGI$splitByYear(DataExtractorWGI$governmentEffectiveness, "governmentEffectiveness")
ruleOfLaw <- DataExtractorWGI$splitByYear(DataExtractorWGI$ruleOfLaw, "ruleOfLaw")
data <- merge(politicalStability, governmentEffectiveness, by = c("country", "year"))
data <- merge(data, ruleOfLaw, by = c("country", "year"))
return(data)
}
res <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
View(res)
View(politicalStability)
View(res)
View(governmentEffectiveness)
View(res)
View(ruleOfLaw)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//armsglobedata.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//armsglobedata.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
head(res1)
head(res2)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//armsglobedata.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
head(res1)
head(res2)
View(res1)
res3 <- merge(res1, res2, by.x = c("country", "year"), by.y = c("i", "year"))
res3 <- merge(res1, res2, by.x = c("i", "year"), by.y = c("country", "year"))
View(res3)
names(res1)[2] <- "country"
res3 <- merge(res1, res2, by.x = c("country", "year"), by.y = c("country", "year"))
res3 <- merge(res1, res2, by = c("country", "year"))
head(res1)
head(res2)
res1$country <- toupper(res1$country)
head(res1)
res3 <- merge(res1, res2, by = c("country", "year"))
View(res3)
View(res1)
View(res3)
t01 <- aggregate( country~year+group, res1, sum )
t01 <- aggregate( v~year+country, res1, sum )
View(`t01`)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//armsglobedata.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
names(res1)[2] <- "country"
res1$country <- toupper(res1$country)
res3 <- merge(res1, res2, by = c("country", "year"))
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//armsglobedata.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
names(res1)[2] <- "country"
res1$country <- toupper(res1$country)
res3 <- merge(res1, res2, by = c("country", "year"))
View(res3)
View(res1)
# Create data directory.
if( !file.exists("../data") )
{
dir.create("../data")
}
dateDownloaded <- date()
dateDownloaded
# Setup path.
fileUrl <- "https://raw.githubusercontent.com/dataarts/armsglobe/master/categories/All.json"
filePath <- "../data/armsglobedata.json"
# Download file.
download.file(fileUrl, destfile = filePath, mode = "wb")
# WARNING: Manually download full dataset
# http://info.worldbank.org/governance/wgi/index.aspx#home
list.files("../data")
# Create data directory.
if( !file.exists("../data") )
{
dir.create("../data")
}
dateDownloaded <- date()
dateDownloaded
# Setup path.
fileUrl <- "https://raw.githubusercontent.com/dataarts/armsglobe/master/categories/All.json"
filePath <- "../data/nisatdataset.json"
# Download file.
download.file(fileUrl, destfile = filePath, mode = "wb")
# WARNING: Manually download full dataset
# http://info.worldbank.org/governance/wgi/index.aspx#home
list.files("../data")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
names(res1)[2] <- "country"
res1$country <- toupper(res1$country)
res3 <- merge(res1, res2, by = c("country", "year"))
View(res3)
str(res1)
str(res2)
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
str(res1)
data$country <- tolower(as.character(data$country))
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
View(res1)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
View(res1)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
View(res1)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
res3 <- merge(res1, res2, by = c("country", "year"))
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
res3 <- merge(res1, res2, by = c("country", "year"))
data$year <- as.numeric(data$year)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
res1 <- DataExtractorNISAT$extract("../data//nisatdataset.json")
res2 <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
res3 <- merge(res1, res2, by = c("country", "year"))
View(res3)
ggplot(res3, aes(country, importValue, colour = School_ID)) + geom_line() + geom_point()
require(ggplot2)
ggplot(res3, aes(country, importValue, colour = School_ID)) + geom_line() + geom_point()
ggplot(res3, aes(country, importValue, colour = year)) + geom_line() + geom_point()
ggplot(res3, aes(year, importValue, colour = country)) + geom_line() + geom_point()
qplot(x=year, y=importValue,
data=res3,
colour=country,
main="GGPLOT line plot with groups") +
geom_line()
qplot(x=year, y=importValue,
data=res3[res3$country==canada,],
colour=country,
main="GGPLOT line plot with groups") +
geom_line()
qplot(x=year, y=importValue,
data=res3[res3$country==mali,],
colour=country,
main="GGPLOT line plot with groups") +
geom_line()
qplot(x=year, y=importValue,
data=res3[res3$country=="canada",],
colour=country,
main="GGPLOT line plot with groups") +
geom_line()
qplot(x=year, y=importValue,
data=res3,
colour=country,
main="GGPLOT line plot with groups") +
geom_line()
?write.csv
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
nisatdataset <- DataExtractorNISAT$extract("../data//nisatdataset.json")
wgidataset <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
dataset <- merge(nisatdataset, wgidataset, by = c("country", "year"))
write.csv(dataset, "../data//dataset.xlsx",)
write.csv(dataset, "../data//dataset.csv")
library(knitr)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
nisatdataset <- DataExtractorNISAT$extract("../data//nisatdataset.json")
wgidataset <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
dataset <- merge(nisatdataset, wgidataset, by = c("country", "year"))
write.csv(dataset, "../data//dataset.csv")
# Generate the codebook.
knit("codebook.Rmd", output = "../codebook.html")
# Generate the analysis.
knit("analysis.Rmd", output = "../analysis.html")
require(knitr)
source("DataExtractorNISAT.R")
source("DataExtractorWGI.R")
source("DataScraping.R")
# Downloading raw datasets.
DataScraping$scrape()
# Extract & Format raw datasets.
nisatdataset <- DataExtractorNISAT$extract("../data//nisatdataset.json")
wgidataset <- DataExtractorWGI$extract("../data//wgidataset.xlsx")
dataset <- merge(nisatdataset, wgidataset, by = c("country", "year"))
# Generate the result dataset.
write.csv(dataset, "../data//dataset.csv")
# Generate the codebook.
# knit("codebook.Rmd", output = "../codebook.html")
# Generate the analysis.
# knit("analysis.Rmd", output = "../analysis.html")
View(dataset)
dataset <- read.csv("../data//dataset.csv")
str(dataset)
dataset <- read.csv("../data//dataset.csv")
fit <- lm(importValue ~ politicalStability + governmentEffectiveness + ruleOfLaw, data=dataset)
summary(fit) # show results
plot(fit)
install.packages("pandoc")
dataset <- read.csv("../data//dataset.csv")
dataset$year
unique(dataset$year)
